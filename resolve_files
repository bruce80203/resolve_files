#!/bin/bash

#######################################
#
# Author: Bruce Woodcock
# Description:
# creates an identical mirror of the directory/file structure
# this banner added: 2015-01-30
#
#######################################
. .tracked.src # this sources .untracked_hard_coded.src, 2 source files one parameter file

run_comparison=true
# function definitions from src file
ping_fileserver 		# if we are not able to ping diskstation the script will exit here
edit_parameters 2>/dev/null     # send error message to dev/null while running with resolve script
mount_file_system               # mounts file server or exits if unsuccessful
check_recs                      # checks parameter file

if [ $run_comparison == true ];then
    for dir in $param_recs; do
        BKP_LABELS_ARRAY=(`echo $dir | tr '|' "\n"`)
        local_area=${BKP_LABELS_ARRAY[0]}
        mounted_area=${BKP_LABELS_ARRAY[1]}
        type=${BKP_LABELS_ARRAY[2]}
        if [[ $type == main ]]; then
            rev_type=copy
        elif [[ $type == copy ]]; then
            rev_type=main
        else
            echo "type is not set correctly must be main or copy"
            exit 1
        fi

        if [[ $type == copy ]]; then
            echo "removing non matching directories on $local_area"
            directory_compare $local_area $mounted_area
        else
            echo "removing non matching directories on $mounted_area"
            directory_compare $mounted_area $local_area
        fi

        echo "sending file_compare $local_area $mounted_area $type"
        file_compare $local_area $mounted_area $type
        echo "sending file_compare $mounted_area $local_area $rev_type"
        file_compare $mounted_area $local_area $rev_type
    done
fi

echo "sleeping 3 seconds"
sleep 3
umount_file_system              # another function
echo "$total_count file comparisons made"
date

if [ $# -ge 1 ]; then
    case $1 in
        -s|--shutdown)
            echo "received shutdown flag -s"
            if [ $ostype == arch ]; then
                systemctl poweroff
            elif [ $ostype == debian -o $ostype == redhat -o $ostype == suse ]; then
                init 0
            elif [ $ostype == mac ]; then
                halt now
            else
                echo "unknown os, shutdown flag ignored"
            fi
            ;;
        *)
            echo "no shutdown argument"
            ;;
    esac
else
    echo "no shutdown argument"
fi
